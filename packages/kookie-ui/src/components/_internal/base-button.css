.rt-BaseButton {
  all: unset;
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  user-select: none;
  position: relative;
  cursor: default;
  gap: var(--base-button-gap);
  transition: var(--transition-button);

  font-family: var(--default-font-family);
  font-style: normal;
  text-align: center;

  &:where([data-disabled]) {
    --spinner-opacity: 1;
    /* Disabled cursor and interaction prevention */
    cursor: not-allowed;
    pointer-events: none;
  }

  &:where(.rt-loading) {
    position: relative;
    cursor: wait;
  }

  /* Removed scale animation on press - keeping transition for other effects */

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }

  height: var(--base-button-height);
}

.rt-BaseButton:where(.rt-full-width) {
  display: flex;
  width: 100%;
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-BaseButton {
    &:where(.rt-r-size-1) {
      --base-button-classic-active-padding-top: 1px;
      --base-button-height: var(--space-5);
      border-radius: max(var(--radius-1), var(--radius-full));
    }
    &:where(.rt-r-size-2) {
      --base-button-classic-active-padding-top: 2px;
      --base-button-height: var(--space-6);
      border-radius: max(var(--radius-2), var(--radius-full));
    }
    &:where(.rt-r-size-3) {
      --base-button-classic-active-padding-top: 2px;
      --base-button-height: var(--space-7);
      border-radius: max(var(--radius-3), var(--radius-full));
    }
    &:where(.rt-r-size-4) {
      --base-button-classic-active-padding-top: 2px;
      --base-button-height: var(--space-8);
      border-radius: max(var(--radius-4), var(--radius-full));
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* classic */

.rt-BaseButton:where(.rt-variant-classic) {
  position: relative;
  top: var(--classic-elevation-offset);
  color: var(--accent-a11);
  background-color: var(--accent-2);
  /* prettier-ignore */
  box-shadow:
    inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a2),
    inset 0 var(--classic-border-width) var(--white-a12),
    inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
    inset 0 calc(-1 * var(--classic-border-width)) var(--accent-a6),
    0 0 0 var(--classic-border-width) var(--accent-a5),
             0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--accent-a7);

  :where(.dark, .dark-theme) &,
  :where(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) & {
    /* prettier-ignore */
    box-shadow:
      inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a3),
      inset 0 var(--classic-border-width) var(--accent-a11),
      inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
      inset 0 calc(-2 * var(--classic-border-width)) var(--black-a11),
      0 0 0 var(--classic-border-width-thick) var(--accent-a7),
      0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--black-a12);
  }

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
    background-color: var(--accent-2);
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: 2px;
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-3);
      /* prettier-ignore */
      box-shadow:
        inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a2),
        inset 0 var(--classic-border-width) var(--white-a12),
        inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
        inset 0 calc(-1 * var(--classic-border-width)) var(--accent-a6),
        0 0 0 var(--classic-border-width) var(--accent-a5),
        0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--accent-a7),
        0 0 0 var(--classic-border-width) var(--accent-a5);

      :where(.dark, .dark-theme) &,
      :where(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) & {
        /* prettier-ignore */
        box-shadow:
          inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a3),
          inset 0 var(--classic-border-width) var(--accent-a11),
          inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
          inset 0 var(--classic-shadow-offset-negative) var(--black-a11),
          0 0 0 var(--classic-border-width-thick) var(--accent-a7),
          0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--black-a12),
          0 0 0 var(--classic-border-width) var(--accent-a5);
      }
    }
  }

  &:where([data-state='open']) {
    background-color: var(--accent-3);
    /* prettier-ignore */
    box-shadow:
      inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a2),
      inset 0 var(--classic-border-width) var(--white-a12),
      inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
      inset 0 calc(-1 * var(--classic-border-width)) var(--accent-a6),
      0 0 0 var(--classic-border-width) var(--accent-a5),
             0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--accent-a7),
      0 0 0 var(--classic-border-width) var(--accent-a5);

    :where(.dark, .dark-theme) &,
    :where(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) & {
      /* prettier-ignore */
      box-shadow:
        inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--accent-a3),
        inset 0 var(--classic-border-width) var(--accent-a11),
        inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--accent-a2),
                 inset 0 var(--classic-shadow-offset-negative) var(--black-a11),
                 0 0 0 var(--classic-border-width-thick) var(--accent-a7),
                 0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--black-a12),
        0 0 0 var(--classic-border-width) var(--accent-a5);
    }
  }

  &:where(:active:not([data-state='open'], [data-disabled])) {
    padding-top: var(--base-button-classic-active-padding-top);
    padding-bottom: 0;
    background-color: var(--accent-3);
    box-shadow: inset 0 var(--classic-border-width) var(--black-a3), 0 0 0 var(--classic-border-width) var(--accent-a7);
  }

  @media (pointer: coarse) {
    &:where(:active:not([data-state='open'])) {
      outline: var(--classic-shadow-blur-large) solid var(--accent-a4);
      outline-offset: 0;
    }
  }

  &:where([data-disabled]) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    box-shadow: none;
    outline: none;
    cursor: not-allowed;
    pointer-events: none;
    top: 0;
  }
}

/* solid */

:where(.radix-themes) {
  --base-button-solid-active-filter: brightness(0.92) saturate(1.1);
  --base-button-solid-high-contrast-hover-filter: contrast(0.88) saturate(1.1) brightness(1.1);
  --base-button-solid-high-contrast-active-filter: contrast(0.82) saturate(1.2) brightness(1.16);
}
:is(.dark, .dark-theme),
:is(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) {
  --base-button-solid-active-filter: brightness(1.08);
  --base-button-solid-high-contrast-hover-filter: contrast(0.88) saturate(1.3) brightness(1.18);
  --base-button-solid-high-contrast-active-filter: brightness(0.95) saturate(1.2);
}

.rt-BaseButton:where(.rt-variant-solid) {
  background-color: var(--accent-9);
  color: var(--accent-contrast);

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-10);
    }
  }
  &:where([data-state='open']) {
    background-color: var(--accent-10);
  }
  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-10);
    filter: var(--base-button-solid-active-filter);
  }
  /* Better -webkit-tap-highlight-color */
  @media (pointer: coarse) {
    &:where(:active:not([data-state='open'])) {
      outline: var(--classic-shadow-blur-large) solid var(--accent-a4);
      outline-offset: 0;
    }
  }
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: 2px;
  }
  &:where(.rt-high-contrast) {
    background-color: var(--accent-12);
    color: var(--gray-1);

    @media (hover: hover) {
      &:where(:hover) {
        background-color: var(--accent-12);
        filter: var(--base-button-solid-high-contrast-hover-filter);
      }
    }
    &:where([data-state='open']) {
      background-color: var(--accent-12);
      filter: var(--base-button-solid-high-contrast-hover-filter);
    }
    &:where(:active:not([data-state='open'])) {
      background-color: var(--accent-12);
      filter: var(--base-button-solid-high-contrast-active-filter);
    }
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    outline: none;
    filter: none;
    cursor: not-allowed;
    pointer-events: none;
  }
}

/* soft / ghost */

.rt-BaseButton:where(.rt-variant-soft, .rt-variant-ghost) {
  color: var(--accent-a11);

  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    cursor: not-allowed;
    pointer-events: none;
  }
}

.rt-BaseButton:where(.rt-variant-soft) {
  /* Base state: solid color for solid panels */
  background-color: var(--accent-3);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    background-color: var(--accent-a3);
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--accent-3);
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--accent-a3);
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  &:where(:focus-visible) {
    outline: 2px solid var(--accent-8);
    outline-offset: -1px;
  }
  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-4);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a4);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-4);
        backdrop-filter: none;
        --backdrop-filter-components: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a4);
        backdrop-filter: var(--backdrop-filter-components);
        --backdrop-filter-components: blur(var(--backdrop-blur-components));
      }
    }
  }
  &:where([data-state='open']) {
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }
  }
  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-5);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a5);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-5);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a5);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    background-color: var(--gray-a3);
    cursor: not-allowed;
    pointer-events: none;
  }
}

.rt-BaseButton:where(.rt-variant-ghost) {
  &:where([data-flush='true']) {
    /* We reset the defined margin variables to avoid inheriting them from a higher component */
    /* If a margin IS defined on the component itself, the utility class will win and reset it */
    --margin-top: 0px;
    --margin-right: 0px;
    --margin-bottom: 0px;
    --margin-left: 0px;

    /* Calculate padding values for different button sizes */
    --button-padding-x: calc(var(--base-button-height) * var(--padding-ratio-horizontal) / 4);
    --button-padding-y: calc(var(--base-button-height) / 8);

    /* Define the overrides to incorporate the negative margins */
    --margin-top-override: calc(var(--margin-top) - var(--button-padding-y));
    --margin-right-override: calc(var(--margin-right) - var(--button-padding-x));
    --margin-bottom-override: calc(var(--margin-bottom) - var(--button-padding-y));
    --margin-left-override: calc(var(--margin-left) - var(--button-padding-x));

    margin-top: var(--margin-top-override);
    margin-right: var(--margin-right-override);
    margin-bottom: var(--margin-bottom-override);
    margin-left: var(--margin-left-override);

    /* Reset the overrides on direct children */
    :where(&) > * {
      --margin-top-override: initial;
      --margin-right-override: initial;
      --margin-bottom-override: initial;
      --margin-left-override: initial;
    }
  }

  @media (hover: hover) {
    &:where(:hover) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-3);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a3);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-3);
        backdrop-filter: none;
        --backdrop-filter-components: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a3);
        backdrop-filter: var(--backdrop-filter-components);
        --backdrop-filter-components: blur(var(--backdrop-blur-components));
      }

      /* Disable backdrop-filter when inside elements that already have backdrop-filter */
      :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
        backdrop-filter: none !important;
      }
    }
  }
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }
  &:where([data-state='open']) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-3);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    }
  }
  &:where(:active:not([data-state='open'])) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    }
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    background-color: transparent;
    cursor: not-allowed;
    pointer-events: none;
  }
}

/* outline */

.rt-BaseButton:where(.rt-variant-outline) {
  /* Base state: solid colors for solid panels */
  box-shadow: inset 0 0 0 1px var(--accent-8);
  color: var(--accent-11);
  transition: var(--transition-background-blur);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    box-shadow: inset 0 0 0 1px var(--accent-a8);
    color: var(--accent-a11);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    box-shadow: inset 0 0 0 1px var(--accent-8);
    color: var(--accent-11);
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    box-shadow: inset 0 0 0 1px var(--accent-a8);
    color: var(--accent-a11);
  }

  @media (hover: hover) {
    &:where(:hover) {
      background-color: var(--accent-2);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-2);
        backdrop-filter: none;
        --backdrop-filter-components: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
        --backdrop-filter-components: blur(var(--backdrop-blur-components));
      }
    }
  }
  &:where([data-state='open']) {
    background-color: var(--accent-2);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a2);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-2);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a2);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }
  }
  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-3);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }
  }
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }
  &:where(.rt-high-contrast) {
    box-shadow:
      inset 0 0 0 1px var(--accent-7),
      inset 0 0 0 1px var(--gray-11);
    color: var(--accent-12);
    
    /* Theme-level translucent override for high contrast */
    :where([data-panel-background='translucent']) & {
      box-shadow:
        inset 0 0 0 1px var(--accent-a7),
        inset 0 0 0 1px var(--gray-a11);
    }

    /* Component-level overrides for high contrast */
    &:where([data-panel-background='solid']) {
      box-shadow:
        inset 0 0 0 1px var(--accent-7),
        inset 0 0 0 1px var(--gray-11);
    }

    &:where([data-panel-background='translucent']) {
      box-shadow:
        inset 0 0 0 1px var(--accent-a7),
        inset 0 0 0 1px var(--gray-a11);
    }
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    box-shadow: inset 0 0 0 1px var(--gray-a7);
    background-color: transparent;
    cursor: not-allowed;
    pointer-events: none;
  }
}

/* surface */

.rt-BaseButton:where(.rt-variant-surface) {
  /* Base state: solid accent for solid panels */
  background-color: var(--accent-2);
  box-shadow: inset 0 0 0 1px var(--accent-7);
  color: var(--accent-a11);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    background-color: var(--accent-a2);
    box-shadow: inset 0 0 0 1px var(--accent-a7);
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--accent-2);
    box-shadow: inset 0 0 0 1px var(--accent-7);
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--accent-a2);
    box-shadow: inset 0 0 0 1px var(--accent-a7);
    backdrop-filter: var(--backdrop-filter-components);
          --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  @media (hover: hover) {
    &:where(:hover) {
      box-shadow: inset 0 0 0 1px var(--accent-8);
      
      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        box-shadow: inset 0 0 0 1px var(--accent-a8);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        box-shadow: inset 0 0 0 1px var(--accent-8);
      }

      &:where([data-panel-background='translucent']) {
        box-shadow: inset 0 0 0 1px var(--accent-a8);
      }
    }
  }
  &:where([data-state='open']) {
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for open */
    :where([data-panel-background='translucent']) & {
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for open */
    &:where([data-panel-background='solid']) {
      box-shadow: inset 0 0 0 1px var(--accent-8);
    }

    &:where([data-panel-background='translucent']) {
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }
  &:where(:active:not([data-state='open'])) {
    background-color: var(--accent-3);
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for active */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for active */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-8);
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }
  &:where(.rt-high-contrast) {
    color: var(--accent-12);
  }
  &:where([data-disabled]) {
    color: var(--gray-a8);
    box-shadow: inset 0 0 0 1px var(--gray-a6);
    background-color: var(--gray-a2);
    cursor: not-allowed;
    pointer-events: none;
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TOGGLE PRESSED STATES                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

/* Toggle button pressed states for all variants */
.rt-BaseButton:where([data-state='on']) {
  /* No scale transform for toggle buttons - removed for better UX */

  /* Classic variant pressed */
  &:where(.rt-variant-classic) {
    padding-top: var(--base-button-classic-active-padding-top);
    padding-bottom: 0;
    background-color: var(--accent-3);
    box-shadow: inset 0 var(--classic-border-width) var(--black-a3), 0 0 0 var(--classic-border-width) var(--accent-a7);

    &:where(.rt-high-contrast) {
      background-color: var(--accent-3);
    }
  }

  /* Solid variant pressed */
  &:where(.rt-variant-solid) {
    background-color: var(--accent-10);
    filter: var(--base-button-solid-active-filter);

    &:where(.rt-high-contrast) {
      background-color: var(--accent-12);
      filter: var(--base-button-solid-high-contrast-active-filter);
    }
  }

  /* Soft variant pressed */
  &:where(.rt-variant-soft) {
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for pressed */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
    }

    /* Component-level overrides for pressed */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
    }
  }

  /* Ghost variant pressed */
  &:where(.rt-variant-ghost) {
    background-color: var(--accent-4);
    
    /* Theme-level translucent override for pressed */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
    }

    /* Component-level overrides for pressed */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
    }
  }

  /* Outline variant pressed */
  &:where(.rt-variant-outline) {
    background-color: var(--accent-3);
    
    /* Theme-level translucent override for pressed */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides for pressed */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      backdrop-filter: var(--backdrop-filter-components);
      --backdrop-filter-components: blur(var(--backdrop-blur-components));
    }
  }

  /* Surface variant pressed */
  &:where(.rt-variant-surface) {
    background-color: var(--accent-3);
    box-shadow: inset 0 0 0 1px var(--accent-8);
    
    /* Theme-level translucent override for pressed */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }

    /* Component-level overrides for pressed */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-8);
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      box-shadow: inset 0 0 0 1px var(--accent-a8);
    }
  }
}

/* Disabled state for ALL toggle buttons (pressed and unpressed) */
.rt-BaseButton:where([disabled][aria-pressed]) {
  /* Remove scale transform when disabled */
  transform: none;

  /* Apply consistent disabled styling across all variants */
  color: var(--gray-a8);
  background-color: var(--gray-a3);
  background: var(--gray-a3);
  box-shadow: none;
  filter: none;
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;

  /* Override any pressed state styling with higher specificity */
  &:where([data-state='on']) {
    transform: none;
    background: var(--gray-a3);
    background-color: var(--gray-a3);
    box-shadow: none;
    filter: none;
  }

  /* Override variant-specific pressed states */
  &:where(.rt-variant-classic) {
    background-color: var(--gray-a3);
    box-shadow: none;
    padding-top: 0;
    padding-bottom: 0;
    top: 0;
  }

  &:where(.rt-variant-solid) {
    background-color: var(--gray-a3);
    filter: none;
  }

  &:where(.rt-variant-soft) {
    background-color: var(--gray-a3);
  }

  &:where(.rt-variant-ghost) {
    background-color: var(--gray-a3);
  }

  &:where(.rt-variant-outline) {
    background-color: var(--gray-a3);
    box-shadow: none;
  }

  &:where(.rt-variant-surface) {
    background-color: var(--gray-a3);
    box-shadow: none;
  }
}

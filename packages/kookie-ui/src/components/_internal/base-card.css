.rt-BaseCard {
  display: block;
  position: relative;
  overflow: hidden;
  border-radius: var(--base-card-border-radius);
  transition: var(--transition-card);

  /* Don't inherit typographic properties */
  font-family: var(--default-font-family);
  font-weight: var(--font-weight-normal);
  font-style: normal;
  text-align: start;

  --inset-border-width: var(--base-card-border-width);
  --inset-border-radius: var(--base-card-border-radius);
  padding-top: var(--base-card-padding-top);
  padding-right: var(--base-card-padding-right);
  padding-bottom: var(--base-card-padding-bottom);
  padding-left: var(--base-card-padding-left);
  box-sizing: border-box;

  /*
   * Some layout acrobatics with `var(--base-card-border-width)` because we want:
   * 1. <Card> with fixed height to clip overflowing content.
   * 2. <Inset> that clips to card's border-box or padding-box depending on the `clip` value.
   *
   * To have both (1) and (2), we clip the content at the outer edge of `.rt-BaseCard` border, and use
   * a ::before pseudo-element for the background color, which is smaller by the border width on each side.
   */
  --inset-padding-top: calc(var(--base-card-padding-top) - var(--base-card-border-width));
  --inset-padding-right: calc(var(--base-card-padding-right) - var(--base-card-border-width));
  --inset-padding-bottom: calc(var(--base-card-padding-bottom) - var(--base-card-border-width));
  --inset-padding-left: calc(var(--base-card-padding-left) - var(--base-card-border-width));

  /*
   * ::before is used for the background color.
   * ::after is used for the inner border that goes on top the children.
   */
  &::before,
  &::after {
    content: '';
    position: absolute;
    pointer-events: none;
    transition: inherit;
    border-radius: calc(var(--base-card-border-radius) - var(--base-card-border-width));
    inset: var(--base-card-border-width);
  }

  /*
   * Background color:
   * 1. "z-index: -1" so that the background goes below the children
   * 2. "contain: paint" creates a new stacking context so that ::before doesn't go below the card's sibling elements
   */
  &::before {
    z-index: -1;
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      backdrop-filter: var(--backdrop-filter-panel);
    }

    /* Component-level overrides (higher specificity) */
    :where(.rt-BaseCard[data-panel-background='solid']) & {
      backdrop-filter: none;
      --backdrop-filter-panel: none;
    }

    :where(.rt-BaseCard[data-panel-background='translucent']) & {
      backdrop-filter: var(--backdrop-filter-panel);
      --backdrop-filter-panel: blur(var(--backdrop-blur-panel));
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    }
  }
  & {
    contain: paint;
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*          Shadows / Surface          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

:where(.radix-themes) {
  --base-card-surface-box-shadow: 0 0 0 1px var(--gray-a5);
  --base-card-surface-hover-box-shadow: 0 0 0 1px var(--gray-a7);
  --base-card-surface-active-box-shadow: 0 0 0 1px var(--gray-a6);

  @supports (color: color-mix(in oklab, white, black)) {
    --base-card-surface-box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a5), var(--gray-5) var(--color-mix-percentage-light));
    --base-card-surface-hover-box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) var(--color-mix-percentage-light));
    --base-card-surface-active-box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a6), var(--gray-6) var(--color-mix-percentage-light));
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*          Shadows / Classic          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

/*
 * Using the same elevated 3D effect as Button classic variant for consistency.
 * Creates a sophisticated multi-layer shadow system with inset and outer shadows.
 */

:where(.radix-themes) {
  /* Base state - elevated 3D effect (exact same structure as Button) */
  --base-card-classic-box-shadow-outer: 
    inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--gray-a2),
    inset 0 var(--classic-border-width) var(--white-a12),
    inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--gray-a2),
    inset 0 calc(-1 * var(--classic-border-width)) var(--gray-a6),
    0 0 0 var(--classic-border-width) var(--gray-a5),
    0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--gray-a7);

  --base-card-classic-box-shadow-inner: none;

  /* Hover state - enhanced elevation (exact same structure as Button) */
  --base-card-classic-hover-box-shadow-outer: 
    inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--gray-a2),
    inset 0 var(--classic-border-width) var(--white-a12),
    inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--gray-a2),
    inset 0 calc(-1 * var(--classic-border-width)) var(--gray-a6),
    0 0 0 var(--classic-border-width) var(--gray-a5),
    0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--gray-a7),
    0 0 0 var(--classic-border-width) var(--gray-a5);

  --base-card-classic-hover-box-shadow-inner: none;

  /* Active state - pressed down effect (exact same structure as Button) */
  --base-card-classic-active-box-shadow-outer: 
    inset 0 var(--classic-border-width) var(--black-a3), 
    0 0 0 var(--classic-border-width) var(--gray-a7);

  --base-card-classic-active-box-shadow-inner: none;

  /* Dark mode overrides (exact same structure as Button) */
  :where(.dark, .dark-theme) &,
  :where(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) {
    --base-card-classic-box-shadow-outer: 
      inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--gray-a3),
      inset 0 var(--classic-border-width) var(--gray-a11),
      inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--gray-a2),
      inset 0 calc(-2 * var(--classic-border-width)) var(--black-a11),
      0 0 0 var(--classic-border-width-thick) var(--gray-a7),
      0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--black-a12);

    --base-card-classic-hover-box-shadow-outer: 
      inset 0 calc(-1 * var(--classic-border-width)) var(--classic-shadow-blur-large) var(--gray-a3),
      inset 0 var(--classic-border-width) var(--gray-a11),
      inset 0 var(--classic-shadow-blur-medium) var(--classic-shadow-blur-large) var(--gray-a2),
      inset 0 var(--classic-shadow-offset-negative) var(--black-a11),
      0 0 0 var(--classic-border-width-thick) var(--gray-a7),
      0 var(--classic-shadow-offset-y) var(--classic-shadow-blur-small) var(--black-a12),
      0 0 0 var(--classic-border-width) var(--gray-a5);

    --base-card-classic-active-box-shadow-outer: 
      inset 0 var(--classic-border-width) var(--black-a3), 
      0 0 0 var(--classic-border-width) var(--gray-a7);

    --base-card-classic-box-shadow-inner: none;
    --base-card-classic-hover-box-shadow-inner: none;
    --base-card-classic-active-box-shadow-inner: none;
  }

  /* Border color definitions (kept for compatibility) */
  --base-card-classic-border-color: var(--gray-a3);
  --base-card-classic-hover-border-color: var(--gray-a3);
  --base-card-classic-active-border-color: var(--gray-a4);
  
  @supports (color: color-mix(in oklab, white, black)) {
    --base-card-classic-border-color: color-mix(in oklab, var(--gray-a3), var(--gray-3) var(--color-mix-percentage-light));
    --base-card-classic-hover-border-color: color-mix(in oklab, var(--gray-a4), var(--gray-4) var(--color-mix-percentage-light));
    --base-card-classic-active-border-color: color-mix(in oklab, var(--gray-a3), var(--gray-3) var(--color-mix-percentage-light));
  }
}

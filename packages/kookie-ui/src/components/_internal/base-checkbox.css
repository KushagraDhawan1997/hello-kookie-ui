.rt-BaseCheckboxRoot {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: top;
  flex-shrink: 0;
  cursor: var(--cursor-checkbox);

  /* Unless in a skeleton, align with text line height when possible and fall back to own height */
  height: var(--skeleton-height, var(--line-height, var(--checkbox-size)));
  --skeleton-height-override: var(--checkbox-size);

  /* Set root radius when in a skeleton */
  border-radius: var(--skeleton-radius);
  --skeleton-radius-override: var(--checkbox-border-radius);


  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  /* Prevent backdrop-filter stacking with parents */
  isolation: isolate;

  /* Component-level overrides */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }
  
  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }


  &::before {
    content: '';
    display: block;
    height: var(--checkbox-size);
    width: var(--checkbox-size);
    border-radius: var(--checkbox-border-radius);
    transition: var(--transition-checkbox);
  }
}

.rt-BaseCheckboxIndicator {
  position: absolute;
  width: var(--checkbox-indicator-size);
  height: var(--checkbox-indicator-size);

  /* Required for subpixel alignment in Safari */
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  
  /* Smooth color transitions for the indicator icon */
  transition: color var(--duration-1) var(--ease-1);
  
  /* Respect user preference for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-BaseCheckboxRoot {
    &:where(.rt-r-size-1) {
      --checkbox-size: calc(var(--space-4) * var(--spacing-multiplier-medium));
      --checkbox-indicator-size: var(--indicator-icon-size-1);
      --checkbox-border-radius: calc(var(--radius-1) * var(--spacing-multiplier-small));
    }
    &:where(.rt-r-size-2) {
      --checkbox-size: var(--space-4);
      --checkbox-indicator-size: var(--indicator-icon-size-2);
      --checkbox-border-radius: calc(var(--radius-1) * var(--spacing-multiplier-medium));
    }
    &:where(.rt-r-size-3) {
      --checkbox-size: calc(var(--space-4) * var(--spacing-multiplier-large));
      --checkbox-indicator-size: var(--indicator-icon-size-3);
      --checkbox-border-radius: calc(var(--radius-1) * var(--spacing-multiplier-medium));
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* solid */

.rt-BaseCheckboxRoot:where(.rt-variant-solid) {
  &:where([data-state='unchecked']) {
    &::before {
      background-color: transparent;
      box-shadow: inset 0 0 0 1px var(--accent-9);
    }
  }

  &:where([data-state='checked'], [data-state='indeterminate']) {
    &::before {
      background-color: var(--accent-9);
      box-shadow: inset 0 0 0 1px var(--accent-9);
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--accent-contrast);
    }

    &:where(.rt-high-contrast) {
      &::before {
        background-color: var(--accent-12);
        box-shadow: inset 0 0 0 1px var(--accent-12);
      }
      & :where(.rt-BaseCheckboxIndicator) {
        color: var(--gray-1);
      }
    }
  }

  &:where(:disabled) {
    &::before {
      box-shadow: inset 0 0 0 1px var(--gray-a6);
      background-color: var(--gray-a3);
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--gray-a8);
    }
  }
}

/* classic */

.rt-BaseCheckboxRoot:where(.rt-variant-classic) {
  position: relative;
  top: var(--classic-elevation-offset);
  
  &:where([data-state='unchecked']) {
    &::before {
      color: var(--accent-a11);
      background-color: var(--color-surface-solid);
      box-shadow: var(--shadow-2);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: var(--color-surface-translucent);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--color-surface-solid);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: var(--color-surface-translucent);
      }
    }
  }

  &:where([data-state='checked'], [data-state='indeterminate']) {
    &::before {
      background-color: var(--accent-3);
      box-shadow: var(--shadow-1);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-3);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--accent-a11);
    }

    &:where(.rt-high-contrast) {
      &::before {
        background-color: var(--accent-3);

        /* Theme-level translucent override for high contrast */
        :where([data-panel-background='translucent'], [data-material='translucent']) & {
          background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        }

        /* Component-level overrides for high contrast */
        &:where([data-panel-background='solid'], [data-material='solid']) {
          background-color: var(--accent-3);
        }

        &:where([data-panel-background='translucent'], [data-material='translucent']) {
          background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        }
      }
      & :where(.rt-BaseCheckboxIndicator) {
        color: var(--accent-12);
      }
    }
  }

  &:where(:active:not(:disabled)) {
    top: calc(var(--classic-elevation-offset) + var(--classic-active-padding-offset-1));
    
    &::before {
      background-color: var(--accent-3);
      box-shadow: var(--shadow-1);

      /* Theme-level translucent override for active */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }

      /* Component-level overrides for active */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-3);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
      }
    }
  }

  &:where(:disabled) {
    &::before {
      background-color: var(--gray-a3);
      box-shadow: none;
      background-image: none;
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--gray-a8);
    }
    top: 0;
  }
}

/* soft */

.rt-BaseCheckboxRoot:where(.rt-variant-soft) {
  &::before {
    background-color: var(--accent-3);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--accent-3);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
    }
  }

  &:where([data-state='checked'], [data-state='indeterminate']) {
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--accent-a11);
    }

    &:where(.rt-high-contrast) {
      & :where(.rt-BaseCheckboxIndicator) {
        color: var(--accent-12);
      }
    }
  }

  &:where(:disabled) {
    &::before {
      background-color: var(--gray-a3);
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--gray-a8);
    }
  }
}



/* outline */

.rt-BaseCheckboxRoot:where(.rt-variant-outline) {
  &:where([data-state='unchecked']) {
    &::before {
      box-shadow: inset 0 0 0 1px var(--accent-6);
      color: var(--accent-11);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        box-shadow: inset 0 0 0 1px var(--accent-a6);
        color: var(--accent-a11);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        box-shadow: inset 0 0 0 1px var(--accent-6);
        color: var(--accent-11);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        box-shadow: inset 0 0 0 1px var(--accent-a6);
        color: var(--accent-a11);
      }
    }
  }

  &:where([data-state='checked'], [data-state='indeterminate']) {
    &::before {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 1px var(--accent-7);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-2);
        box-shadow: inset 0 0 0 1px var(--accent-7);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a7);
      }
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--accent-a11);
    }

    &:where(.rt-high-contrast) {
      & :where(.rt-BaseCheckboxIndicator) {
        color: var(--accent-12);
      }
    }
  }

  &:where(:disabled) {
    &::before {
      box-shadow: inset 0 0 0 1px var(--gray-a7);
      background-color: transparent;
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--gray-a8);
    }
  }
}

/* surface */

.rt-BaseCheckboxRoot:where(.rt-variant-surface) {
  &:where([data-state='unchecked']) {
    &::before {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 1px var(--accent-6);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a6);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-2);
        box-shadow: inset 0 0 0 1px var(--accent-6);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a2), var(--accent-2) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a6);
      }
    }
  }

  &:where([data-state='checked'], [data-state='indeterminate']) {
    &::before {
      background-color: var(--accent-3);
      box-shadow: inset 0 0 0 1px var(--accent-8);

      /* Theme-level translucent override */
      :where([data-panel-background='translucent'], [data-material='translucent']) & {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a8);
      }

      /* Component-level overrides (higher specificity) */
      &:where([data-panel-background='solid'], [data-material='solid']) {
        background-color: var(--accent-3);
        box-shadow: inset 0 0 0 1px var(--accent-8);
      }

      &:where([data-panel-background='translucent'], [data-material='translucent']) {
        background-color: color-mix(in srgb, var(--accent-a3), var(--accent-3) 60%);
        box-shadow: inset 0 0 0 1px var(--accent-a8);
      }
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--accent-a11);
    }

    &:where(.rt-high-contrast) {
      & :where(.rt-BaseCheckboxIndicator) {
        color: var(--accent-12);
      }
    }
  }

  &:where(:disabled) {
    &::before {
      box-shadow: inset 0 0 0 1px var(--gray-a6);
      background-color: var(--gray-a2);
    }
    & :where(.rt-BaseCheckboxIndicator) {
      color: var(--gray-a8);
    }
  }
}

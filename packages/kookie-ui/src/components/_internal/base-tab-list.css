.rt-BaseTabList {
  display: flex;
  justify-content: flex-start;
  overflow-x: auto;
  white-space: nowrap;
  min-width: 0;

  font-family: var(--default-font-family);
  font-style: normal;

  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

.rt-BaseTabListTrigger {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  position: relative;
  user-select: none;
  transition: var(--transition-tabs);
  scroll-behavior: smooth;
}

.rt-BaseTabListTriggerInner,
.rt-BaseTabListTriggerInnerHidden {
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition-tabs), var(--transition-background-blur);
}

.rt-BaseTabListTriggerInner {
  position: absolute;

  :where(.rt-BaseTabListTrigger[data-state='inactive'], .rt-TabNavLink:not([data-active])) & {
    letter-spacing: var(--tab-inactive-letter-spacing);
    word-spacing: var(--tab-inactive-word-spacing);
    transition-delay: var(--duration-1); /* 100ms - allows staggered effect vs active state's 0ms */
  }

  :where(.rt-BaseTabListTrigger[data-state='active'], .rt-TabNavLink[data-active]) & {
    font-weight: var(--font-weight-medium);
    letter-spacing: var(--tab-active-letter-spacing);
    word-spacing: var(--tab-active-word-spacing);
    transition-delay: 0ms; /* Immediate transition for active state */
  }
}

.rt-BaseTabListTriggerInnerHidden {
  visibility: hidden;
  font-weight: var(--font-weight-medium);
  letter-spacing: var(--tab-active-letter-spacing);
  word-spacing: var(--tab-active-word-spacing);
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-BaseTabListTrigger {
  box-sizing: border-box;
  height: var(--tab-height);
  padding-left: var(--tab-padding-x);
  padding-right: var(--tab-padding-x);
}

.rt-BaseTabListTriggerInner,
.rt-BaseTabListTriggerInnerHidden {
  box-sizing: border-box;
  padding: var(--tab-inner-padding-y) var(--tab-inner-padding-x);
  border-radius: var(--tab-inner-border-radius);
}

@breakpoints {
  .rt-BaseTabList {
    &:where(.rt-r-size-1) {
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);
      --tab-height: var(--space-6);
      --tab-padding-x: var(--space-1);
      --tab-inner-padding-x: var(--space-1);
      --tab-inner-padding-y: calc(var(--space-1) * var(--spacing-multiplier-small));
      --tab-inner-border-radius: var(--radius-1);
    }
    &:where(.rt-r-size-2) {
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);
      --tab-height: var(--space-7);
      --tab-padding-x: var(--space-2);
      --tab-inner-padding-x: var(--space-2);
      --tab-inner-padding-y: var(--space-1);
      --tab-inner-border-radius: var(--radius-2);
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-BaseTabList {
  box-shadow: inset 0 calc(-1 * var(--border-width-standard)) 0 0 var(--gray-a5);
}

.rt-BaseTabListTrigger {
  color: var(--gray-a11);

  @media (hover: hover) {
    &:where(:hover) {
      color: var(--gray-12);
    }
    &:where(:hover) :where(.rt-BaseTabListTriggerInner) {
      /* Base state: solid gray for solid panels */
      background-color: var(--gray-a3);

      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--gray-a3);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for hover */
      :where(.rt-BaseTabList[data-panel-background='solid']) & {
        background-color: var(--gray-a3);
        backdrop-filter: none;
        --backdrop-filter-components: none;
      }

      :where(.rt-BaseTabList[data-panel-background='translucent']) & {
        background-color: var(--gray-a3);
        backdrop-filter: var(--backdrop-filter-components);
        --backdrop-filter-components: blur(var(--backdrop-blur-components));
      }

      /* Disable backdrop-filter when inside elements that already have backdrop-filter */
      :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
        backdrop-filter: none !important;
      }
    }
    &:where(:focus-visible:hover) :where(.rt-BaseTabListTriggerInner) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-a3);

      /* Theme-level translucent override for focus+hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a3);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for focus+hover */
      :where(.rt-BaseTabList[data-panel-background='solid']) & {
        background-color: var(--accent-a3);
        backdrop-filter: none;
        --backdrop-filter-components: none;
      }

      :where(.rt-BaseTabList[data-panel-background='translucent']) & {
        background-color: var(--accent-a3);
        backdrop-filter: var(--backdrop-filter-components);
        --backdrop-filter-components: blur(var(--backdrop-blur-components));
      }
    }
  }
  &:where([data-state='active'], [data-active]) {
    color: var(--gray-12);
  }
  &:where(:focus-visible) :where(.rt-BaseTabListTriggerInner) {
    outline: var(--focus-outline-width) solid var(--focus-8);
    outline-offset: var(--focus-outline-offset-inset);
    scroll-margin: var(--space-2);
  }
  &:where([data-state='active'], [data-active])::before {
    box-sizing: border-box;
    content: '';
    height: var(--focus-outline-width); /* Consistent with focus outline thickness */
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: var(--accent-indicator);
    transform-origin: center;
    transition: 
      transform var(--duration-3) var(--ease-3),
      opacity var(--duration-2) var(--ease-1),
      background-color var(--duration-2) var(--ease-1);
  }

  :where(.rt-BaseTabList.rt-high-contrast) & {
    &:where([data-state='active'], [data-active])::before {
      background-color: var(--accent-12);
    }
  }
}

/* Forced colors support */
@media (forced-colors: active) {
  .rt-BaseTabListTrigger:where([data-state='active'])::before,
  .rt-TabNavLink:where([data-active])::before {
    background-color: Highlight;
  }
  
  .rt-BaseTabListTrigger:where(:focus-visible) :where(.rt-BaseTabListTriggerInner) {
    outline: 2px solid Highlight;
    outline-offset: 2px;
  }
}



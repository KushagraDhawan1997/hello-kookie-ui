.rt-ProgressRoot {
  --progress-value: 0;
  --progress-max: 100;
  --progress-duration: var(--progress-default-duration);
  pointer-events: none;
  position: relative;
  overflow: hidden;
  flex-grow: 1;
  height: var(--progress-height);
  border-radius: var(--progress-radius);

  /* 
   * Theme-level translucent override
   * Applies backdrop filter for elevated visual effects
   */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  /* Prevent backdrop-filter stacking with parent elements */
  isolation: isolate;

  /* 
   * Component-level material overrides
   * These ensure proper rendering based on material setting
   */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }
  
  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }
}


.rt-ProgressIndicator {
  display: block;
  height: var(--position-full);
  width: max(calc(var(--progress-value) / var(--progress-max) * 100%), var(--progress-height));
  border-radius: var(--progress-indicator-radius);
  transition: var(--transition-progress);

  &:where([data-state='indeterminate']) {
    animation-name: rt-progress-indicator-indeterminate-grow;
    animation-duration: var(--progress-duration);
    animation-iteration-count: infinite;
    animation-fill-mode: both;
    animation-direction: normal;
  }
}

@keyframes rt-progress-indicator-indeterminate-grow {
  0% {
    width: calc(var(--progress-scale-initial) * 100%);
  }
  20% {
    width: calc(var(--progress-scale-step-1) * 100%);
  }
  30% {
    width: calc(var(--progress-scale-step-2) * 100%);
  }
  40%,
  50% {
    width: calc(var(--progress-scale-step-3) * 100%);
  }
  100% {
    width: calc(var(--progress-scale-final) * 100%);
  }
}



/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-ProgressRoot {
    &:where(.rt-r-size-1) {
      --progress-height: var(--progress-slider-height-1);
      --progress-radius: var(--progress-slider-radius-1);
      --progress-indicator-radius: var(--progress-slider-radius-1);
    }
    &:where(.rt-r-size-2) {
      --progress-height: var(--progress-slider-height-2);
      --progress-radius: var(--progress-slider-radius-2);
      --progress-indicator-radius: var(--progress-slider-radius-2);
    }
    &:where(.rt-r-size-3) {
      --progress-height: var(--progress-slider-height-3);
      --progress-radius: var(--progress-slider-radius-3);
      --progress-indicator-radius: var(--progress-slider-radius-3);
    }
    &:where(.rt-r-size-4) {
      --progress-height: var(--progress-slider-height-4);
      --progress-radius: var(--progress-slider-radius-4);
      --progress-indicator-radius: var(--progress-slider-radius-4);
    }
    &:where(.rt-r-size-5) {
      --progress-height: var(--progress-slider-height-5);
      --progress-radius: var(--progress-slider-radius-5);
      --progress-indicator-radius: var(--progress-slider-radius-5);
    }
    &:where(.rt-r-size-6) {
      --progress-height: var(--progress-slider-height-6);
      --progress-radius: var(--progress-slider-radius-6);
      --progress-indicator-radius: var(--progress-slider-radius-6);
    }
    &:where(.rt-r-size-7) {
      --progress-height: var(--progress-slider-height-7);
      --progress-radius: var(--progress-slider-radius-7);
      --progress-indicator-radius: var(--progress-slider-radius-7);
    }
    &:where(.rt-r-size-8) {
      --progress-height: var(--progress-slider-height-8);
      --progress-radius: var(--progress-slider-radius-8);
      --progress-indicator-radius: var(--progress-slider-radius-8);
    }
    &:where(.rt-r-size-9) {
      --progress-height: var(--progress-slider-height-9);
      --progress-radius: var(--progress-slider-radius-9);
      --progress-indicator-radius: var(--progress-slider-radius-9);
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* surface */

.rt-ProgressRoot:where(.rt-variant-surface) {
  background-color: var(--gray-2);
  box-shadow: inset 0 0 0 1px var(--gray-6);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    background-color: color-mix(in srgb, var(--gray-a2), var(--gray-2) 60%);
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }

  /* Component-level overrides */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    background-color: var(--gray-2);
    box-shadow: inset 0 0 0 1px var(--gray-6);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    background-color: color-mix(in srgb, var(--gray-a2), var(--gray-2) 60%);
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }

  & :where(.rt-ProgressIndicator) {
    background-color: var(--accent-9);
  }
}







/* soft */

.rt-ProgressRoot:where(.rt-variant-soft) {
  background-color: var(--gray-3);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    background-color: color-mix(in srgb, var(--gray-a3), var(--gray-3) 60%);
  }

  /* Component-level overrides */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    background-color: var(--gray-3);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    background-color: color-mix(in srgb, var(--gray-a3), var(--gray-3) 60%);
  }

  & :where(.rt-ProgressIndicator) {
    background-color: var(--accent-9);
  }
}

/* outline */

.rt-ProgressRoot:where(.rt-variant-outline) {
  /* Base state: no background, just border */
  box-shadow: inset 0 0 0 1px var(--gray-6);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }

  /* Component-level overrides */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    box-shadow: inset 0 0 0 1px var(--gray-6);
  }

  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }

  & :where(.rt-ProgressIndicator) {
    background-color: var(--accent-9);
  }
}



/* all high-contrast */
.rt-ProgressRoot:where(.rt-high-contrast) {

  & :where(.rt-ProgressIndicator) {
    background-color: var(--accent-12);
  }
}



.rt-SelectTrigger {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  flex-shrink: 0;
  user-select: none;
  vertical-align: top;
  line-height: var(--height);
  transition: var(--transition-select);

  font-family: var(--default-font-family);
  font-weight: var(--font-weight-regular);
  font-style: normal;
  text-align: start;

  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

.rt-SelectTriggerInner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.rt-SelectIcon {
  flex-shrink: 0;
  margin-left: auto;
  width: var(--trigger-icon-size-default);
  height: var(--trigger-icon-size-default);
}

.rt-SelectContent {
  --scrollarea-scrollbar-vertical-margin-top: var(--select-content-padding);
  --scrollarea-scrollbar-vertical-margin-bottom: var(--select-content-padding);
  --scrollarea-scrollbar-horizontal-margin-left: var(--select-content-padding);
  --scrollarea-scrollbar-horizontal-margin-right: var(--select-content-padding);

  overflow: hidden;
  background-color: var(--color-panel);
  backdrop-filter: var(--backdrop-filter-panel);
  box-shadow: var(--shadow-5);

  &:where([data-side]) {
    min-width: var(--radix-select-trigger-width);
    max-height: var(--radix-select-content-available-height);
    transform-origin: var(--radix-select-content-transform-origin);
  }
}

.rt-SelectViewport {
  box-sizing: border-box;
  padding: var(--select-content-padding);

  :where(.rt-SelectContent:has(.rt-ScrollAreaScrollbar[data-orientation='vertical'])) & {
    padding-right: var(--space-3);
  }
}

.rt-SelectItem {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  padding-left: var(--select-item-indicator-width);
  padding-right: var(--select-item-indicator-width);
  position: relative;
  box-sizing: border-box;
  outline: none;
  scroll-margin: var(--select-content-padding) 0;

  /* Fix sticky text highlighting after selection in Firefox */
  user-select: none;

  /* Cursors */
  cursor: var(--cursor-menu-item);
  &:where([data-disabled]) {
    cursor: default;
  }
}

.rt-SelectItemIndicator {
  position: absolute;
  left: 0;
  width: var(--select-item-indicator-width);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.rt-SelectSeparator {
  height: 1px;
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
  margin-left: var(--select-item-indicator-width);
  margin-right: var(--select-separator-margin-right);
}

.rt-SelectLabel {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  padding-left: var(--select-item-indicator-width);
  padding-right: var(--select-item-indicator-width);
  color: var(--gray-a10);
  user-select: none;
  cursor: default;

  :where(.rt-SelectItem) + & {
    margin-top: var(--space-2);
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectTrigger {
  color: var(--gray-12);

  &:where(:not(.rt-variant-ghost)) {
    box-sizing: border-box;
    height: var(--select-trigger-height);
  }
  &:where(.rt-variant-ghost) {
    box-sizing: border-box;
    height: var(--select-trigger-height);
    padding: 0 var(--select-trigger-ghost-padding-x);


  }
}

@breakpoints {
  .rt-SelectTrigger {
    &:where(.rt-r-size-1) {
      --select-trigger-height: var(--space-5);
      gap: var(--component-gap-1);
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);
      border-radius: max(var(--radius-1), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-2);
        padding-right: var(--space-2);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-1);
        --select-trigger-ghost-padding-x: var(--space-2);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-1);
        height: var(--trigger-icon-size-1);
      }
    }
    &:where(.rt-r-size-2) {
      --select-trigger-height: var(--space-6);
      gap: var(--component-gap-2);
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);
      border-radius: max(var(--radius-2), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-3);
        padding-right: var(--space-3);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-2);
        --select-trigger-ghost-padding-x: var(--space-2);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-2);
        height: var(--trigger-icon-size-2);
      }
    }
    &:where(.rt-r-size-3) {
      --select-trigger-height: var(--space-7);
      gap: var(--component-gap-3);
      font-size: var(--font-size-3);
      line-height: var(--line-height-3);
      letter-spacing: var(--letter-spacing-3);
      border-radius: max(var(--radius-3), var(--radius-full));

      &:where(:not(.rt-variant-ghost)) {
        padding-left: var(--space-4);
        padding-right: var(--space-4);
      }
      &:where(.rt-variant-ghost) {
        gap: var(--component-gap-ghost-3);
        --select-trigger-ghost-padding-x: var(--space-3);
      }
      & :where(.rt-SelectIcon) {
        width: var(--trigger-icon-size-3);
        height: var(--trigger-icon-size-3);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * CONTENT SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-SelectContent {
    &:where(.rt-r-size-1) {
      --select-content-padding: var(--space-1);
      --select-item-height: var(--space-5);
      --select-item-indicator-width: calc(var(--space-5) / 1.2);
      --select-separator-margin-right: var(--space-2);
      border-radius: var(--radius-3);

      & :where(.rt-SelectLabel) {
        font-size: var(--font-size-1);
        letter-spacing: var(--letter-spacing-1);
        line-height: var(--line-height-1);
      }
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-1);
        line-height: var(--line-height-1);
        letter-spacing: var(--letter-spacing-1);
        border-radius: var(--radius-1);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: calc(8px * var(--scaling));
        height: calc(8px * var(--scaling));
      }
    }
    &:where(.rt-r-size-2, .rt-r-size-3) {
      --select-content-padding: var(--space-2);
      --select-item-height: var(--space-6);
      --select-item-indicator-width: var(--space-5);
      --select-separator-margin-right: var(--space-3);
      border-radius: var(--radius-4);

      & :where(.rt-SelectLabel) {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
        line-height: var(--line-height-2);
      }
      & :where(.rt-SelectItem) {
        line-height: var(--line-height-2);
        border-radius: var(--radius-2);
      }
    }
    &:where(.rt-r-size-2) {
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: calc(10px * var(--scaling));
        height: calc(10px * var(--scaling));
      }
    }
    &:where(.rt-r-size-3) {
      & :where(.rt-SelectItem) {
        font-size: var(--font-size-3);
        letter-spacing: var(--letter-spacing-3);
      }
      & :where(.rt-SelectItemIndicatorIcon) {
        width: calc(10px * var(--scaling));
        height: calc(10px * var(--scaling));
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER VARIANTS                                                                                *
 *                                                                                                 *
 ***************************************************************************************************/

/* Outline variant - neutral with gray border (previously surface) */
.rt-SelectTrigger:where(.rt-variant-outline) {
  --select-trigger-border-width: 1px;
  
  background-color: var(--color-surface);
  color: var(--gray-12);
  box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--gray-a6);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    --color-surface: var(--color-surface-solid);
    backdrop-filter: none;
  }

  &:where([data-panel-background='translucent']) {
    --color-surface: var(--color-surface-translucent);
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Hover effects */
  @media (hover: hover) {
    &:where(:hover:not(:focus-visible)) {
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--gray-a8);
    }
  }
  &:where([data-state='open']) {
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--gray-a8);
  }
  &:where(:disabled) {
    color: var(--gray-a11);
    background-color: var(--gray-a2);
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--gray-a6);
  }
  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
    }
  }
}

/* Classic variant - 3D inset form input */
.rt-SelectTrigger:where(.rt-variant-classic) {
  --select-trigger-border-width: 0px;
  
  position: relative;
  /* Subtle inset positioning */
  top: calc(var(--classic-elevation-offset) / 3); /* More pronounced than before */

  background-color: var(--color-surface);
  color: var(--gray-12);

  /* 3D inset effect - more pronounced but still subtle */
  /* prettier-ignore */
  box-shadow:
    inset 0 var(--classic-border-width) calc(var(--classic-shadow-blur-small) / 1.5) var(--gray-a3),
    inset 0 calc(-1 * var(--classic-border-width)) var(--gray-a1),
    inset 0 calc(var(--classic-border-width) * 2) calc(var(--classic-shadow-blur-medium) / 3) var(--gray-a2),
    0 0 0 var(--classic-border-width) var(--gray-a5);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Component-level overrides for surface variant */
  &:where([data-panel-background='solid']) {
    --color-surface: var(--color-surface-solid);
    backdrop-filter: none;
  }

  &:where([data-panel-background='translucent']) {
    --color-surface: var(--color-surface-translucent);
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Hover effects - slightly reduced inset */
  @media (hover: hover) {
    &:where(:hover:not(:focus-visible)) {
      /* prettier-ignore */
      box-shadow:
        inset 0 calc(var(--classic-border-width) / 1.5) calc(var(--classic-shadow-blur-small) / 2) var(--gray-a2),
        inset 0 calc(-1 * var(--classic-border-width) / 1.5) var(--gray-a1),
        inset 0 var(--classic-border-width) calc(var(--classic-shadow-blur-medium) / 4) var(--gray-a2),
        0 0 0 var(--classic-border-width) var(--gray-a6);
    }
  }
  &:where([data-state='open']) {
    /* prettier-ignore */
    box-shadow:
      inset 0 calc(var(--classic-border-width) / 1.5) calc(var(--classic-shadow-blur-small) / 2) var(--gray-a2),
      inset 0 calc(-1 * var(--classic-border-width) / 1.5) var(--gray-a1),
      inset 0 var(--classic-border-width) calc(var(--classic-shadow-blur-medium) / 4) var(--gray-a2),
      0 0 0 var(--classic-border-width) var(--gray-a6);
  }

  /* Focus state - accent ring with minimal inset */
  &:where(:focus-visible) {
    /* prettier-ignore */
    box-shadow:
      inset 0 calc(var(--classic-border-width) / 2) calc(var(--classic-shadow-blur-small) / 3) var(--gray-a1),
      0 0 0 2px var(--focus-8);
  }

  &:where(:disabled) {
    color: var(--gray-a11);
    background-color: var(--gray-a2);
    /* prettier-ignore */
    box-shadow:
      inset 0 calc(var(--classic-border-width) / 2) calc(var(--classic-shadow-blur-small) / 2) var(--gray-a1),
      inset 0 0 0 var(--classic-border-width) var(--gray-a6);
  }
  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
    }
  }
}

/* Soft variant - branded with accent colors */
.rt-SelectTrigger:where(.rt-variant-soft) {
  --select-trigger-border-width: 0px;
  
  /* Use solid accent for solid panels, alpha accent for translucent panels */
  background-color: var(--accent-3);
  color: var(--accent-12);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    background-color: var(--accent-a3);
    color: var(--accent-a12);
    backdrop-filter: var(--backdrop-filter-components);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--accent-3);
    color: var(--accent-12);
    backdrop-filter: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--accent-a3);
    color: var(--accent-a12);
    backdrop-filter: var(--backdrop-filter-components);
  }

  @media (hover: hover) {
    &:where(:hover:not(:focus-visible)) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-4);

      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a4);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-4);
        backdrop-filter: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a4);
        backdrop-filter: var(--backdrop-filter-components);
      }
    }
  }
  &:where([data-state='open']) {
    background-color: var(--accent-4);
    
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
    }
  }
  &:where(:focus-visible) {
    outline-color: var(--accent-8);
  }
  &:where(:disabled) {
    color: var(--gray-a11);
    background-color: var(--gray-a3);
    backdrop-filter: none;
  }
  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--accent-12);
      opacity: 0.6;
    }
  }
}

/* Surface variant - transparent with accent border (previously outline) */
.rt-SelectTrigger:where(.rt-variant-surface) {
  --select-trigger-border-width: 1px;
  
  background-color: transparent;
  box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-7);
  color: var(--gray-12);
  transition: var(--transition-background-blur);

  /* Theme-level panel awareness (NO backdrop filter for true transparency) */
  :where([data-panel-background='translucent']) & {
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a7);
  }

  /* Component-level overrides */
  &:where([data-panel-background='solid']) {
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-7);
  }

  &:where([data-panel-background='translucent']) {
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a7);
  }

  /* Hover effects */
  @media (hover: hover) {
    &:where(:hover:not(:focus-visible)) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-2);

      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-2);
        backdrop-filter: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
      }
    }
  }

  /* Interaction states get light background */
  &:where([data-state='open']) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-2);
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-8);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a8);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-8);
      backdrop-filter: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a8);
      backdrop-filter: var(--backdrop-filter-components);
    }
  }

  &:where(:focus-visible) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-2);
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-8);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a8);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Component-level overrides */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-8);
      backdrop-filter: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a2);
      box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--accent-a8);
      backdrop-filter: var(--backdrop-filter-components);
    }
  }

  &:where(:disabled) {
    background-color: var(--gray-a2);
    box-shadow: inset 0 0 0 var(--select-trigger-border-width) var(--gray-a6);
    color: var(--gray-a8);
  }
  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
    }
  }
}

/* Ghost variant - transparent until interaction */
.rt-SelectTrigger:where(.rt-variant-ghost) {
  --select-trigger-border-width: 0px;
  
  background-color: transparent;
  color: var(--accent-12);

  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    color: var(--accent-a12);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    color: var(--accent-12);
  }

  &:where([data-panel-background='translucent']) {
    color: var(--accent-a12);
  }

  @media (hover: hover) {
    &:where(:hover:not(:focus-visible)) {
      /* Base state: solid accent for solid panels */
      background-color: var(--accent-2);

      /* Theme-level translucent override for hover */
      :where([data-panel-background='translucent']) & {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Component-level overrides for hover */
      &:where([data-panel-background='solid']) {
        background-color: var(--accent-2);
        backdrop-filter: none;
      }

      &:where([data-panel-background='translucent']) {
        background-color: var(--accent-a2);
        backdrop-filter: var(--backdrop-filter-components);
      }

      /* Disable backdrop-filter when inside elements that already have backdrop-filter */
      :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
        backdrop-filter: none !important;
      }
    }
  }
  &:where([data-state='open']) {
    background-color: var(--accent-2);
    
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a2);
      backdrop-filter: var(--backdrop-filter-components);
    }

    /* Disable backdrop-filter when inside elements that already have backdrop-filter */
    :where(.rt-PopoverContent, .rt-BaseDialogContent, .rt-BaseMenuContent, .rt-DropdownMenuContent, .rt-ContextMenuContent, .rt-AlertDialogContent, .rt-HoverCardContent, .rt-TooltipContent, .rt-Card) & {
      backdrop-filter: none !important;
    }
  }
  &:where(:focus-visible) {
    outline-color: var(--accent-8);
  }
  &:where(:disabled) {
    color: var(--gray-a11);
    background-color: transparent;
  }
  &:where([data-placeholder]) {
    & :where(.rt-SelectTriggerInner) {
      color: var(--gray-a10);
    }
  }
}

/* all disabled */
.rt-SelectTrigger {
  &:where(:disabled) {
    & :where(.rt-SelectIcon) {
      color: var(--gray-a9);
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * MENU VARIANTS                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectItem:where([data-accent-color]) {
  color: var(--accent-a11);
}
.rt-SelectItem:where([data-disabled]) {
  color: var(--gray-a8);
}

.rt-SelectSeparator {
  background-color: var(--gray-a6);
}

/* Ensure gray text appears muted in non-highlighted state */
.rt-SelectItem :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']) {
  color: var(--gray-a10);
}

/* solid */

.rt-SelectContent:where(.rt-variant-solid) {
  & :where(.rt-SelectItem[data-highlighted]) {
    background-color: var(--accent-9);
    color: var(--accent-contrast);

    /* Force all text elements to inherit hover color, including those with color="gray" */
    & :where(.rt-Text) {
      color: inherit !important;
    }

    /* Also target any element with data-accent-color="gray" */
    & :where([data-accent-color='gray']) {
      color: inherit !important;
    }
  }
  &:where(.rt-high-contrast) {
    & :where(.rt-SelectItem[data-highlighted]) {
      background-color: var(--accent-12);
      color: var(--accent-1);

      /* Force all text elements to inherit hover color in high contrast mode */
      & :where(.rt-Text) {
        color: inherit !important;
      }

      /* Also target any element with data-accent-color="gray" in high contrast */
      & :where([data-accent-color='gray']) {
        color: inherit !important;
      }

      &:where([data-accent-color]) {
        background-color: var(--accent-9);
        color: var(--accent-contrast);

        & :where(.rt-Text) {
          color: inherit !important;
        }

        & :where([data-accent-color='gray']) {
          color: inherit !important;
        }
      }
    }
  }
}

/* soft */

.rt-SelectContent:where(.rt-variant-soft) {
  & :where(.rt-SelectItem[data-highlighted]) {
    background-color: var(--accent-a4);

    /* In soft variant, improve contrast for gray text while maintaining hierarchy */
    & :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']) {
      color: var(--gray-11) !important;
    }
  }
}

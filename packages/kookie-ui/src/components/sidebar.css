@import './_internal/base-menu.css';
@import './_internal/base-sidebar.css';
@import './_internal/base-sidebar-menu.css';

/* Container Variants */
.rt-SidebarContainer:where(.rt-variant-outline) {
  background-color: var(--color-panel);
  backdrop-filter: var(--backdrop-filter-panel);
  
  /* Component-level overrides (higher specificity) - remap --color-panel */
  &:where([data-panel-background='solid']) {
    --color-panel: var(--color-panel-solid);
    backdrop-filter: none;
    --backdrop-filter-panel: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    --color-panel: var(--color-panel-translucent);
    backdrop-filter: var(--backdrop-filter-panel);
    --backdrop-filter-panel: blur(var(--backdrop-blur-panel));
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }
  
  /* Floating sidebars get full inset border */
  :where(.rt-SidebarRoot[data-type="floating"]) & {
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }
  
  /* Non-floating sidebars get border only on the content-facing side */
  :where(.rt-SidebarRoot[data-type="sidebar"][data-side="left"]) & {
    box-shadow: inset -1px 0 0 0 var(--gray-a6);
  }
  
  :where(.rt-SidebarRoot[data-type="sidebar"][data-side="right"]) & {
    box-shadow: inset 1px 0 0 0 var(--gray-a6);
  }
}

.rt-SidebarContainer:where(.rt-variant-ghost) {
  background-color: transparent;
  backdrop-filter: none;
  border: none;
}

.rt-SidebarContainer:where(.rt-variant-soft) {
  /* Use solid gray for solid panels, alpha gray for translucent panels */
  background-color: var(--gray-2);
  
  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    background-color: var(--gray-a2);
    backdrop-filter: var(--backdrop-filter-panel);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--gray-2);
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--gray-a2);
    backdrop-filter: var(--backdrop-filter-panel);
    --backdrop-filter-panel: blur(var(--backdrop-blur-panel));
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }
}

.rt-SidebarContainer:where(.rt-variant-surface) {
  /* Base state: neutral gray background (maintains sidebar neutrality) */
  background-color: var(--gray-1);
  
  /* Theme-level translucent override */
  :where([data-panel-background='translucent']) & {
    background-color: var(--gray-a1);
    backdrop-filter: var(--backdrop-filter-panel);
  }

  /* Component-level overrides (higher specificity) */
  &:where([data-panel-background='solid']) {
    background-color: var(--gray-1);
    backdrop-filter: none;
    --backdrop-filter-panel: none;
    --backdrop-filter-components: none;
  }

  &:where([data-panel-background='translucent']) {
    background-color: var(--gray-a1);
    backdrop-filter: var(--backdrop-filter-panel);
    --backdrop-filter-panel: blur(var(--backdrop-blur-panel));
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }
  
  /* Inset border like Card surface variant */
  /* Floating sidebars get full inset border */
  :where(.rt-SidebarRoot[data-type="floating"]) & {
    box-shadow: inset 0 0 0 1px var(--gray-6);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      box-shadow: inset 0 0 0 1px var(--gray-a6);
    }
  }
  
  /* Non-floating sidebars get border only on the content-facing side */
  :where(.rt-SidebarRoot[data-type="sidebar"][data-side="left"]) & {
    box-shadow: inset -1px 0 0 0 var(--gray-6);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      box-shadow: inset -1px 0 0 0 var(--gray-a6);
    }
  }
  
  :where(.rt-SidebarRoot[data-type="sidebar"][data-side="right"]) & {
    box-shadow: inset 1px 0 0 0 var(--gray-6);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      box-shadow: inset 1px 0 0 0 var(--gray-a6);
    }
  }
}

/* Header/Footer Layout Utilities */
.rt-SidebarHeader:where(.rt-SidebarHeader--container) {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--space-2);
  padding: var(--base-menu-content-padding);
  min-height: var(--base-menu-item-height);
  
  /* Make MenuButtons expand to full width */
  & :where(.rt-SidebarMenuButton) {
    flex: 1;
  }
}

.rt-SidebarFooter:where(.rt-SidebarFooter--container) {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--space-2);
  padding: var(--base-menu-content-padding);
  min-height: var(--base-menu-item-height);
  
  /* Make MenuButtons expand to full width */
  & :where(.rt-SidebarMenuButton) {
    flex: 1;
  }
}

/* Flex utilities for header/footer layouts */
.rt-SidebarHeader:where(.rt-flex-row) { flex-direction: row; }
.rt-SidebarHeader:where(.rt-flex-col) { flex-direction: column; }
.rt-SidebarHeader:where(.rt-items-center) { align-items: center; }
.rt-SidebarHeader:where(.rt-items-start) { align-items: flex-start; }
.rt-SidebarHeader:where(.rt-items-end) { align-items: flex-end; }
.rt-SidebarHeader:where(.rt-justify-between) { justify-content: space-between; }
.rt-SidebarHeader:where(.rt-justify-center) { justify-content: center; }
.rt-SidebarHeader:where(.rt-justify-start) { justify-content: flex-start; }
.rt-SidebarHeader:where(.rt-justify-end) { justify-content: flex-end; }
.rt-SidebarHeader:where(.rt-gap-1) { gap: var(--space-1); }
.rt-SidebarHeader:where(.rt-gap-2) { gap: var(--space-2); }
.rt-SidebarHeader:where(.rt-gap-3) { gap: var(--space-3); }
.rt-SidebarHeader:where(.rt-gap-4) { gap: var(--space-4); }

.rt-SidebarFooter:where(.rt-flex-row) { flex-direction: row; }
.rt-SidebarFooter:where(.rt-flex-col) { flex-direction: column; }
.rt-SidebarFooter:where(.rt-items-center) { align-items: center; }
.rt-SidebarFooter:where(.rt-items-start) { align-items: flex-start; }
.rt-SidebarFooter:where(.rt-items-end) { align-items: flex-end; }
.rt-SidebarFooter:where(.rt-justify-between) { justify-content: space-between; }
.rt-SidebarFooter:where(.rt-justify-center) { justify-content: center; }
.rt-SidebarFooter:where(.rt-justify-start) { justify-content: flex-start; }
.rt-SidebarFooter:where(.rt-justify-end) { justify-content: flex-end; }
.rt-SidebarFooter:where(.rt-gap-1) { gap: var(--space-1); }
.rt-SidebarFooter:where(.rt-gap-2) { gap: var(--space-2); }
.rt-SidebarFooter:where(.rt-gap-3) { gap: var(--space-3); }
.rt-SidebarFooter:where(.rt-gap-4) { gap: var(--space-4); }

/* Header/Footer Menu Button Support */
.rt-SidebarHeader :where(.rt-SidebarMenuButton),
.rt-SidebarFooter :where(.rt-SidebarMenuButton) {
  /* Inherit all base MenuButton styles */
  display: flex;
  align-items: center;
  gap: var(--space-2);
  min-height: var(--base-menu-item-height);
  padding-top: var(--base-menu-item-padding-y);
  padding-bottom: var(--base-menu-item-padding-y);
  padding-left: var(--base-menu-item-padding-left);
  padding-right: var(--base-menu-item-padding-right);
  box-sizing: border-box;
  position: relative;
  outline: none;
  background: none;
  border: none;
  width: 100%;
  text-align: left;
  cursor: var(--cursor-menu-item);
  user-select: none;
  
  /* Header/Footer-specific styling */
  justify-content: flex-start;
  
  /* Transitions */
  transition: background var(--duration-2) var(--ease-1), 
              box-shadow var(--duration-2) var(--ease-1),
              filter var(--duration-2) var(--ease-1);
  
  /* Focus state */
  &:where(:focus-visible) {
    outline: 2px solid var(--focus-8);
    outline-offset: 2px;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

.rt-SidebarHeader :where(.rt-SidebarMenuButton) {
  border-radius: var(--sidebar-base-border-radius) var(--sidebar-base-border-radius) 0 0;
}

.rt-SidebarFooter :where(.rt-SidebarMenuButton) {
  border-radius: 0 0 var(--sidebar-base-border-radius) var(--sidebar-base-border-radius);
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  /* Container sizing - inherit from base menu */
  .rt-SidebarContainer {
    &:where(.rt-r-size-1) {
      --sidebar-base-padding: var(--space-3);
    }
    &:where(.rt-r-size-2) {
      --sidebar-base-padding: var(--space-4);
    }
  }

  /* Content sizing - use base menu tokens directly */
  .rt-SidebarContent {
    &:where(.rt-r-size-1) {
      --sidebar-content-padding: var(--base-menu-content-padding);
      --sidebar-item-padding-left: var(--base-menu-item-padding-left);
      --sidebar-item-padding-right: var(--base-menu-item-padding-right);
      --sidebar-item-padding-y: var(--base-menu-item-padding-y);
      --sidebar-item-height: var(--base-menu-item-height);
    }
    &:where(.rt-r-size-2) {
      --sidebar-content-padding: var(--base-menu-content-padding);
      --sidebar-item-padding-left: var(--base-menu-item-padding-left);
      --sidebar-item-padding-right: var(--base-menu-item-padding-right);
      --sidebar-item-padding-y: var(--base-menu-item-padding-y);
      --sidebar-item-height: var(--base-menu-item-height);
    }
  }

  /* Size-specific menu button styling - inherit from base menu */
  .rt-SidebarContent:where(.rt-r-size-1) {
    & :where(.rt-SidebarMenuButton) {
      gap: var(--component-gap-2);
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);
      border-radius: var(--radius-1);
      font-weight: var(--font-weight-medium);

      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-1);
        height: var(--content-icon-size-1);
        flex-shrink: 0;
      }
    }

    /* Sub-trigger icon sizing - matches base menu exactly */
    & :where(.rt-BaseMenuSubTriggerIcon) {
      width: var(--indicator-icon-size-1);
      height: var(--indicator-icon-size-1);
      flex-shrink: 0;
      margin-left: auto;
    }
  }

  .rt-SidebarContent:where(.rt-r-size-2) {
    & :where(.rt-SidebarMenuButton) {
      gap: var(--component-gap-3);
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);
      border-radius: var(--radius-2);
      font-weight: var(--font-weight-medium);

      /* stylelint-disable-next-line selector-max-type */
      & :where(svg) {
        width: var(--content-icon-size-2);
        height: var(--content-icon-size-2);
        flex-shrink: 0;
      }
    }

    /* Sub-trigger icon sizing - matches base menu exactly */
    & :where(.rt-BaseMenuSubTriggerIcon) {
      width: var(--indicator-icon-size-2);
      height: var(--indicator-icon-size-2);
      flex-shrink: 0;
      margin-left: auto;
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * MENU VARIANTS                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

/* Menu Variant: Solid - EXACT match to base menu */
.rt-SidebarHeader:where(.rt-menu-variant-solid),
.rt-SidebarContent:where(.rt-menu-variant-solid),
.rt-SidebarFooter:where(.rt-menu-variant-solid) {
  /* Sub-trigger transitions - match base menu */
  & :where(.rt-SidebarMenuSubTrigger) {
    transition: var(--transition-menu);
    
    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
    
    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition: background var(--duration-1) var(--ease-1), color var(--duration-2) var(--ease-1);
    }
  }

  /* Sub-trigger open state - match base menu */
  & :where(.rt-SidebarMenuSubTrigger[data-state='open']) {
    /* Base state: solid gray for solid panels */
    background-color: var(--gray-3);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--gray-a3);
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--gray-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--gray-a3);
    }
  }

  /* Menu item transitions - match base menu */
  & :where(.rt-SidebarMenuButton) {
    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition: background var(--duration-1) var(--ease-1), color var(--duration-2) var(--ease-1);
    }
  }

  /* Hover/highlighted state for solid variant - EXACT match to base menu */
  & :where(.rt-SidebarMenuButton[data-highlighted]) {
    background-color: var(--accent-9);
    color: var(--accent-contrast);

    & :where(.rt-BaseMenuSubTriggerIcon) {
      color: var(--accent-contrast);
    }

    /* Force all text elements to inherit hover color, including those with color="gray" */
    & :where(.rt-Text) {
      color: inherit !important;
    }

    /* Also target any element with data-accent-color="gray" */
    & :where([data-accent-color='gray']:not(.rt-Badge)) {
      color: inherit !important;
    }

    /* FIX: Ensure badges maintain their own styling and don't inherit hover colors */
    & :where(.rt-Badge) {
      color: var(--accent-contrast) !important;
      background-color: var(--accent-12) !important;
    }
  }

  /* Active navigation state for solid variant - same as highlighted */
  & :where(.rt-SidebarMenuButton[data-active]) {
    background-color: var(--accent-9);
    color: var(--accent-contrast);

    /* Force all text elements to inherit active color */
    & :where(.rt-Text) {
      color: inherit !important;
    }

    & :where([data-accent-color='gray']:not(.rt-Badge)) {
      color: inherit !important;
    }

    /* FIX: Ensure badges maintain their own styling and don't inherit active colors */
    & :where(.rt-Badge) {
      color: var(--accent-contrast) !important;
      background-color: var(--accent-12) !important;
    }
  }

  /* High contrast support for solid variant - EXACT match to base menu */
  &:where(.rt-high-contrast) {
    & :where(.rt-SidebarMenuButton[data-highlighted]) {
      background-color: var(--accent-12);
      color: var(--accent-1);

      & :where(.rt-BaseMenuSubTriggerIcon) {
        color: var(--accent-1);
      }

      /* Force all text elements to inherit hover color in high contrast mode */
      & :where(.rt-Text) {
        color: inherit !important;
      }

      /* Also target any element with data-accent-color="gray" in high contrast */
      & :where([data-accent-color='gray']:not(.rt-Badge)) {
        color: inherit !important;
      }

      /* FIX: High contrast badge styling */
      & :where(.rt-Badge) {
        color: var(--accent-1) !important;
        background-color: var(--accent-9) !important;
      }

      &:where([data-accent-color]) {
        background-color: var(--accent-9);
        color: var(--accent-contrast);

        & :where(.rt-Text) {
          color: inherit !important;
        }

        & :where([data-accent-color='gray']:not(.rt-Badge)) {
          color: inherit !important;
        }

        & :where(.rt-Badge) {
          color: var(--accent-contrast) !important;
          background-color: var(--accent-12) !important;
        }
      }
    }

    & :where(.rt-SidebarMenuButton[data-active]) {
      background-color: var(--accent-12);
      color: var(--accent-1);

      & :where(.rt-Text) {
        color: inherit !important;
      }

      & :where([data-accent-color='gray']:not(.rt-Badge)) {
        color: inherit !important;
      }

      & :where(.rt-Badge) {
        color: var(--accent-1) !important;
        background-color: var(--accent-9) !important;
      }

      &:where([data-accent-color]) {
        background-color: var(--accent-9);
        color: var(--accent-contrast);

        & :where(.rt-Text) {
          color: inherit !important;
        }

        & :where([data-accent-color='gray']:not(.rt-Badge)) {
          color: inherit !important;
        }

        & :where(.rt-Badge) {
          color: var(--accent-contrast) !important;
          background-color: var(--accent-12) !important;
        }
      }
    }
  }
}

/* Menu Variant: Soft - EXACT match to base menu */
.rt-SidebarHeader:where(.rt-menu-variant-soft),
.rt-SidebarContent:where(.rt-menu-variant-soft),
.rt-SidebarFooter:where(.rt-menu-variant-soft) {
  /* Sub-trigger transitions - match base menu */
  & :where(.rt-SidebarMenuSubTrigger) {
    transition: var(--transition-menu);
    
    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
    
    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition: background var(--duration-1) var(--ease-1), color var(--duration-2) var(--ease-1);
    }
  }

  /* Sub-trigger open state - match base menu */
  & :where(.rt-SidebarMenuSubTrigger[data-state='open']) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-3);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
    }
  }

  /* Menu item transitions - match base menu */
  & :where(.rt-SidebarMenuButton) {
    /* Remove backdrop-filter transitions in translucent mode to prevent flickering */
    :where([data-panel-background='translucent']) & {
      transition: background var(--duration-1) var(--ease-1), color var(--duration-2) var(--ease-1);
    }
  }

  /* Hover/highlighted state for soft variant - EXACT match to base menu */
  & :where(.rt-SidebarMenuButton[data-highlighted]) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-4);
    
    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a4);
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-4);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a4);
    }

    /* In soft variant, improve contrast for gray text while maintaining hierarchy */
    & :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']:not(.rt-Badge)) {
      color: var(--gray-11) !important;
    }
  }

  /* Active navigation state for soft variant - use accent-3 like sub-trigger */
  & :where(.rt-SidebarMenuButton[data-active]) {
    /* Base state: solid accent for solid panels */
    background-color: var(--accent-3);
    color: var(--accent-12);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent']) & {
      background-color: var(--accent-a3);
      color: var(--accent-a12);
    }

    /* Component-level overrides (higher specificity) */
    &:where([data-panel-background='solid']) {
      background-color: var(--accent-3);
      color: var(--accent-12);
      backdrop-filter: none;
      --backdrop-filter-components: none;
    }

    &:where([data-panel-background='translucent']) {
      background-color: var(--accent-a3);
      color: var(--accent-a12);
    }

    /* In soft variant, improve contrast for gray text while maintaining hierarchy */
    & :where(.rt-Text[data-accent-color='gray'], [data-accent-color='gray']:not(.rt-Badge)) {
      color: var(--gray-11) !important;
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * COLLAPSIBLE BEHAVIOR                                                                            *
 *                                                                                                 *
 ***************************************************************************************************/

/* Collapsible behavior - ICON-ONLY MODE APPROACH */
.rt-SidebarRoot:where([data-collapsible="icon"]) {
  /* No transitions - instant state changes for better UX */
  transition: none;
  overflow: visible; /* Allow content to be visible */
  flex-shrink: 0; /* Don't let flex container shrink this */
}

/* Icon-only width - size-specific space tokens */
:where(.radix-themes) {
  --sidebar-icon-width-1: calc(var(--space-9) + var(--space-1)); /* Size 1: 36px */
  --sidebar-icon-width-2: calc(var(--space-9) + var(--space-3)); /* Size 2: 76px */
}

/* Icon-only collapsed state - show narrow sidebar with icons only */
.rt-SidebarRoot:where([data-collapsible="icon"][data-state="collapsed"]) {
  opacity: 1; /* Keep visible */
  pointer-events: auto; /* Keep interactive */
  
  /* Size-specific widths */
  &:where(.rt-r-size-1) {
    width: var(--sidebar-icon-width-1);
    min-width: var(--sidebar-icon-width-1);
  }
  
  &:where(.rt-r-size-2) {
    width: var(--sidebar-icon-width-2);
    min-width: var(--sidebar-icon-width-2);
  }
}

/* Expanded state - full width */
.rt-SidebarRoot:where([data-collapsible="icon"][data-state="expanded"]) {
  width: var(--sidebar-width);
  min-width: var(--sidebar-width);
  opacity: 1;
  pointer-events: auto;
}

/* Container sizing for icon mode */
.rt-SidebarContainer:where([data-collapsible="icon"]) {
  /* Allow dynamic width based on state */
  width: 100%;
  min-width: 0;
  flex-shrink: 0;
}

/* Content adjustments for icon mode */
.rt-SidebarContent:where([data-collapsible="icon"]) {
  /* Allow content to shrink in icon mode */
  width: 100%;
  min-width: 0;
  flex-shrink: 0;
}

/* Hide text content in collapsed icon mode */
.rt-SidebarRoot:where([data-collapsible="icon"][data-state="collapsed"]) {
  /* Style menu buttons for icon-only mode */
  & :where(.rt-SidebarMenuButton) {
    justify-content: center;
    flex-direction: column;
    padding: var(--space-2) var(--space-1);
    gap: var(--space-1);
    min-height: auto;
    
    /* Show text spans as small labels under icons */
    /* stylelint-disable-next-line selector-max-type */
    & :where(span) {
      display: block;
      font-size: var(--font-size-0);
      line-height: var(--line-height-0);
      color: var(--gray-a10);
      text-align: center;
      font-weight: var(--font-weight-medium);
      max-width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  /* Dynamic width calculation for labels inside collapsed icon sidebar */
  &:where(.rt-r-size-1) {
    /* Group labels (no button padding) */
    --sidebar-group-label-width: calc(var(--sidebar-icon-width-1) - (var(--space-2) * 2));
    /* Button labels (inside menu buttons, subtract button padding) */
    --sidebar-button-label-width: calc(var(--sidebar-group-label-width) - (var(--space-1) * 2));
  }

  &:where(.rt-r-size-2) {
    --sidebar-group-label-width: calc(var(--sidebar-icon-width-2) - (var(--space-2) * 2));
    --sidebar-button-label-width: calc(var(--sidebar-group-label-width) - (var(--space-1) * 2));
  }
 
  /* Apply the computed width to both group labels and the spans inside icon buttons */
  & :where(.rt-SidebarGroupLabel) {
    max-width: var(--sidebar-group-label-width);
  }
 
  /* stylelint-disable-next-line selector-max-type */
  & :where(.rt-SidebarMenuButton span) {
    max-width: var(--sidebar-button-label-width);
    min-width: 0; /* allow shrinking */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: var(--gray-a12);
    font-weight: var(--font-weight-medium);
  }

  /* stylelint-disable selector-max-type, selector-max-specificity */
  &.rt-menu-variant-solid :where(.rt-SidebarMenuButton[data-highlighted] span),
  &.rt-menu-variant-solid :where(.rt-SidebarMenuButton[data-active] span) {
    color: var(--accent-contrast) !important;
  }
  /* stylelint-enable selector-max-type, selector-max-specificity */
  
  /* Show group labels as small text instead of separators */
  :where(.rt-SidebarGroupLabel) {
    /* Use block display to make text-overflow ellipsis work reliably */
    display: block;
    text-align: center;
    min-width: 0;
    min-height: auto; /* Remove inherited min-height constraint */
    max-width: var(--sidebar-group-label-width);
    font-size: var(--font-size-0);
    line-height: var(--line-height-0);
    color: var(--gray-a9);
    font-weight: var(--font-weight-medium);
    padding: var(--space-1) var(--space-1);
    margin: var(--space-2) 0 var(--space-1) 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    
    /* Hide label for the first group if you prefer */
    :where(.rt-SidebarGroup:first-child) & {
      margin-top: 0;
    }
  }
  
  /* Hide badges and shortcuts */
  :where(.rt-SidebarMenuBadge),
  :where(.rt-SidebarMenuShortcut) {
    display: none;
  }
  
  /* Keep sub-menu trigger icons hidden in icon mode, but preserve accordion functionality */
  :where(.rt-SidebarMenuSubTriggerIcon) {
    display: none;
  }
  
  /* Remove nested styling from sub-menu list to make items look like top-level */
  :where(.rt-SidebarMenuSubList) {
    padding-left: 0; /* Remove indentation */
    border-left: none; /* Remove border */
    margin-left: 0; /* Remove margin */
  }
  
  /* Tighter menu padding for icon-only mode */
  :where(.rt-SidebarMenu) {
    padding: var(--space-2);
  }
}

/* Icon size remapping for collapsed state - make icons more prominent */
.rt-SidebarRoot:where([data-collapsible="icon"][data-state="collapsed"]) {
  /* Size 1 → use much larger icons (size 3 equivalent) */
  &:where(.rt-r-size-1) {
    /* stylelint-disable-next-line selector-max-type */
    & :where(.rt-SidebarMenuButton svg) {
      width: var(--content-icon-size-2) !important;  /* ~19px instead of ~14px */
      height: var(--content-icon-size-2) !important;
      color: currentColor !important; /* Ensure icon color is visible */
    }
  }
  
  /* Size 2 → use largest icons (size 4 equivalent) */
  &:where(.rt-r-size-2) {
    /* stylelint-disable-next-line selector-max-type */
    & :where(.rt-SidebarMenuButton svg) {
      width: var(--content-icon-size-3) !important;  /* 20px instead of 16px */
      height: var(--content-icon-size-3) !important;
      color: currentColor !important; /* Ensure icon color is visible */
    }
  }
}

/* Floating sidebars in icon mode */
.rt-SidebarRoot:where([data-collapsible="icon"][data-type="floating"]) {
  /* Same instant approach */
  transition: none;
  overflow: visible; /* Allow content to be visible outside container */
  flex-shrink: 0;
}

/* Floating collapsed state */
.rt-SidebarRoot:where([data-collapsible="icon"][data-type="floating"][data-state="collapsed"]) {
  opacity: 1;
  pointer-events: auto;
  /* Keep floating margins but adjust for smaller width */
  margin: var(--space-2);
  
  /* Size-specific widths */
  &:where(.rt-r-size-1) {
    width: var(--sidebar-icon-width-1);
    min-width: var(--sidebar-icon-width-1);
  }
  
  &:where(.rt-r-size-2) {
    width: var(--sidebar-icon-width-2);
    min-width: var(--sidebar-icon-width-2);
  }
}

.rt-SidebarRoot:where([data-collapsible="icon"][data-type="floating"][data-state="expanded"]) {
  width: var(--sidebar-width);
  min-width: var(--sidebar-width);
  opacity: 1;
  pointer-events: auto;
  /* Restore floating margins */
  margin: var(--space-2);
}

/* Mobile responsive behavior - hide completely on mobile regardless of icon mode */
@media (max-width: 768px) {
  .rt-SidebarRoot:where([data-collapsible="icon"]) {
    display: none;
  }
  
  .rt-SidebarRoot:where([data-collapsible="icon"][data-state="expanded"]) {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: var(--sidebar-width);
    z-index: 50;
    box-shadow: var(--shadow-6);
  }
}

/* Reduced motion support - already no animations */
@media (prefers-reduced-motion: reduce) {
  .rt-SidebarRoot:where([data-collapsible="icon"]) {
    transition: none;
  }
} 
/* Disabled state uses simple opacity instead of complex blend modes */

.rt-SwitchRoot {
  position: relative;
  display: inline-flex;
  align-items: center;
  vertical-align: top;
  flex-shrink: 0;
  height: var(--switch-height);
  border-radius: 9999px;

  --switch-width: calc(var(--switch-height) * 1.75);
  --switch-thumb-inset: 1px;
  --switch-thumb-size: calc(var(--switch-height) - var(--switch-thumb-inset) * 2);
  --switch-thumb-translate-x: calc(var(--switch-width) - var(--switch-height));

  /* 
   * Theme-level translucent override
   * Applies backdrop filter for elevated visual effects
   */
  :where([data-panel-background='translucent'], [data-material='translucent']) & {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  /* Prevent backdrop-filter stacking with parent elements */
  isolation: isolate;

  /* 
   * Component-level material overrides
   * These ensure proper rendering based on material setting
   */
  &:where([data-panel-background='solid'], [data-material='solid']) {
    backdrop-filter: none;
    --backdrop-filter-components: none;
  }
  
  &:where([data-panel-background='translucent'], [data-material='translucent']) {
    backdrop-filter: var(--backdrop-filter-components);
    --backdrop-filter-components: blur(var(--backdrop-blur-components));
  }

  &::before {
    content: '';
    display: block;
    width: var(--switch-width);
    height: var(--switch-height);
    border-radius: 9999px;
    transition: background-color var(--transition-standard), box-shadow var(--transition-standard);
    cursor: var(--cursor-switch);
  }

  &:where(:focus-visible)::before {
    outline: 2px solid var(--focus-8);
    outline-offset: 2px;
  }

  &:where([data-disabled])::before {
    cursor: var(--cursor-disabled);
  }
}

.rt-SwitchThumb {
  background-color: white;
  position: absolute;
  left: var(--switch-thumb-inset);
  width: var(--switch-thumb-size);
  height: var(--switch-thumb-size);
  border-radius: 9999px;
  box-shadow: var(--shadow-2);
  transition: transform var(--transition-standard), box-shadow var(--transition-standard);

  &:where([data-state='checked']) {
    transform: translateX(var(--switch-thumb-translate-x));
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-SwitchRoot {
    &:where(.rt-r-size-1) {
      --switch-height: var(--space-4);
    }
    &:where(.rt-r-size-2) {
      --switch-height: calc(var(--space-5));
    }
    &:where(.rt-r-size-3) {
      --switch-height: var(--space-6);
    }
    &:where(.rt-r-size-4) {
      --switch-height: var(--space-7);
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* surface */

.rt-SwitchRoot:where(.rt-variant-surface) {
  &::before {
    background-color: var(--gray-2);
    box-shadow: inset 0 0 0 1px var(--gray-6);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--gray-a2), var(--gray-2) 60%);
      box-shadow: inset 0 0 0 1px var(--gray-a6);
    }

    /* Component-level overrides */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--gray-2);
      box-shadow: inset 0 0 0 1px var(--gray-6);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--gray-a2), var(--gray-2) 60%);
      box-shadow: inset 0 0 0 1px var(--gray-a6);
    }
  }
  
  &:where([data-state='checked'])::before {
    background-color: var(--accent-9);
    box-shadow: none;
  }

  &:where(.rt-high-contrast) {
    &:where([data-state='checked'])::before {
      background-color: var(--accent-12);
      box-shadow: none;
    }
  }
  



}

/* soft */

.rt-SwitchRoot:where(.rt-variant-soft) {
  &::before {
    background-color: var(--gray-3);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      background-color: color-mix(in srgb, var(--gray-a3), var(--gray-3) 60%);
    }

    /* Component-level overrides */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      background-color: var(--gray-3);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      background-color: color-mix(in srgb, var(--gray-a3), var(--gray-3) 60%);
    }
  }
  
  &:where([data-state='checked'])::before {
    background-color: var(--accent-9);
  }

  &:where(.rt-high-contrast) {
    &:where([data-state='checked'])::before {
      background-color: var(--accent-12);
    }
  }
}

/* outline */

.rt-SwitchRoot:where(.rt-variant-outline) {
  &::before {
    /* Base state: no background, just border */
    box-shadow: inset 0 0 0 1px var(--gray-6);

    /* Theme-level translucent override */
    :where([data-panel-background='translucent'], [data-material='translucent']) & {
      box-shadow: inset 0 0 0 1px var(--gray-a6);
    }

    /* Component-level overrides */
    &:where([data-panel-background='solid'], [data-material='solid']) {
      box-shadow: inset 0 0 0 1px var(--gray-6);
    }

    &:where([data-panel-background='translucent'], [data-material='translucent']) {
      box-shadow: inset 0 0 0 1px var(--gray-a6);
    }
  }
  
  &:where([data-state='checked'])::before {
    background-color: var(--accent-9);
    box-shadow: none;
  }

  &:where(.rt-high-contrast) {
    &:where([data-state='checked'])::before {
      background-color: var(--accent-12);
      box-shadow: none;
    }
  }
  



}

/* all disabled Switches */

[data-disabled] {
  .rt-SwitchRoot:where(&) {
    cursor: var(--cursor-disabled);
  }
  .rt-SwitchRoot:where(&)::before {
    background-color: var(--gray-a3) !important;
    box-shadow: none !important;
    outline: none !important;
  }
  .rt-SwitchThumb:where(&) {
    cursor: var(--cursor-disabled);
    box-shadow: none !important;
    outline: none !important;
  }
}

/* Disabled checked state - lighter accent color */
.rt-SwitchRoot:where([data-disabled][data-state='checked'])::before {
  background-color: var(--accent-a3) !important;
}
